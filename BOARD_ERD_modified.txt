---------- 회원 테이블 -------------
-- 회원코드 시퀀스
CREATE SEQUENCE SEQ_USERS_USER_CODE
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 9999
	NOCYCLE
	NOCACHE;
	
-- 회원 정보 테이블
DROP TABLE USERS;
CREATE TABLE USERS (
	USER_CODE NUMBER NOT NULL,		-- 회원코드(PK) 시퀀스로 입력
	USERID VARCHAR2(30) NOT NULL,	-- 아이디(UNIQUE)
	PASSWORD VARCHAR2(100) NOT NULL,	-- 비밀번호
	NAME VARCHAR2(100) NOT NULL,	-- 사용자 이름
	CREATE_DATE DATE DEFAULT SYSDATE NOT NULL,	-- 회원정보 생성일(DEFAULT SYSDATE)
	CONSTRAINT PK_USER_CODE PRIMARY KEY(USER_CODE),
	CONSTRAINT UNQ_USERID UNIQUE(USERID)
);

SELECT * FROM USERS;

-- INSERT 기본 형식
INSERT INTO USERS
VALUES(SEQ_USERS_USER_CODE.NEXTVAL, 'id', 'pw', 'name', SYSDATE);



------------- 게시판 테이블 --------------
-- 게시판코드 시퀀스
CREATE SEQUENCE SEQ_BOARDS_BOARD_CODE
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 9999
	NOCYCLE
	NOCACHE;
	
-- 게시물 정보 테이블
DROP TABLE BOARDS;
CREATE TABLE BOARDS (
	BOARD_CODE NUMBER NOT NULL,	-- 게시판 코드(PK) 시퀀스로 입력
	USER_CODE NUMBER NOT NULL,		-- 회원코드(FK)
	TITLE VARCHAR2(300) NOT NULL,	-- 게시물 제목
	CONTEXT CLOB NOT NULL,								-- 게시물 : 4GB 데이터 입력 가능
	COUNT_VIEW NUMBER DEFAULT 0 NOT NULL,	-- 조회수 기본값 0 (이클립스에서 ++ 하도록 코드!)
	COUNT_COMMENT NUMBER DEFAULT 0 NOT NULL, -- 댓글수 기본값 0 (이클립스에서 COUNT(*) 하도록 코드!)
	CREATE_DATE DATE DEFAULT SYSDATE NOT NULL,	-- 게시일 (DEFAULT SYSDATE)
	UPDATE_DATE DATE DEFAULT SYSDATE NOT NULL,	-- 게시글 수정 날짜
	DEL_YN VARCHAR2(1) DEFAULT 'N' NOT NULL,		-- 게시글 삭제여부 표시 (DELETE 쿼리를 이용하지 않음! 리스트 뿌려줄때 WEHRE 구문으로 처리)
	CONSTRAINT PK_BOARD_CODE PRIMARY KEY(BOARD_CODE),
	CONSTRAINT FK_USER_CODE_B FOREIGN KEY(USER_CODE) REFERENCES USERS(USER_CODE)
);

SELECT * FROM BOARDS;

-- INSERT 기본 형식
INSERT INTO BOARDS (BOARD_CODE, USER_CODE, TITLE, CONTEXT, COUNT_VIEW, DEL_YN, CREATE_DATE)
VALUES(SEQ_BOARDS_BOARD_CODE.NEXTVAL, 1, 'title', 'context', 0, 'N', SYSDATE);



--------- 첨부파일 테이블 -------------
-- 첨부파일 시퀀스
CREATE SEQUENCE SEQ_FILES_FILE_CODE
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 9999
	NOCYCLE
	NOCACHE;

-- 첨부파일 테이블
DROP TABLE FILES;
CREATE TABLE FILES (
	FILE_CODE NUMBER NOT NULL,				-- 첨부파일 코드(PK) 시퀀스로 입력
	BOARD_CODE NUMBER NOT NULL,
	USER_CODE NUMBER NOT NULL,
	FILE_ORIGINAL_NAME VARCHAR2(100) NOT NULL,	-- 원래 파일 이름
	FILE_STORED_NAME VARCHAR2(200) NOT NULL,		-- 서버 저장시 파일 이름(서버 저장 시 파일 이름이 겹치는 것을 피하기 위해!)
	FILE_PATH VARCHAR2(500) NOT NULL,		-- 첨부파일 경로
	FILE_SIZE VARCHAR2(200) NOT NULL,		-- 첨부파일 크기
	CREATE_DATE DATE DEFAULT SYSDATE,		-- 첨부파일 등록 날짜
	DEL_YN VARCHAR2(1) DEFAULT 'N' NOT NULL,	-- 첨부파일 삭제 여부
	CONSTRAINT PK_FILE_CODE PRIMARY KEY(FILE_CODE),
	CONSTRAINT FK_BOARD_CODE_F FOREIGN KEY(BOARD_CODE) REFERENCES BOARDS(BOARD_CODE) ON DELETE CASCADE, -- 게시글 삭제 시 첨부파일도 삭제되도록
	CONSTRAINT FK_USER_CODE_F FOREIGN KEY(USER_CODE) REFERENCES USERS(USER_CODE)
);

SELECT * FROM FILES;

-- INSERT 기본 형식
INSERT INTO FILES
VALUES(SEQ_FILES_FILE_CODE.NEXTVAL, 1, 1, 'origianl name', 'stored name', 'path', 'size', SYSDATE, 'N');



------------ 댓글 테이블 --------------
-- 댓글코드 시퀀스
CREATE SEQUENCE SEQ_COMMENTS_COMMENT_CODE
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 9999
	NOCYCLE
	NOCACHE;

-- 댓글 정보 테이블
DROP TABLE COMMENTS;
CREATE TABLE COMMENTS(
	COMMENT_CODE NUMBER NOT NULL, -- 댓글 코드(PK) 시퀀스로 입력
	BOARD_CODE NUMBER NOT NULL,
	USER_CODE NUMBER NOT NULL,
	CONTEXT CLOB NOT NULL,					-- 댓글 내용 4GB, 댓글은 내용이 있어야 하므로 NOT NULL
	COUNT_GOOD NUMBER DEFAULT 0,	-- 좋아요 (DEFULAT 0)
	COUNT_BAD NUMBER DEFAULT 0,		-- 싫어요 (DEFAULT 0)
	CREATE_DATE DATE DEFAULT SYSDATE,	-- 댓글 작성 날짜
	UPDATE_DATE DATE DEFAULT SYSDATE,	-- 댓글 수정 날짜
	DEL_YN VARCHAR2(1) DEFAULT 'N' NOT NULL,	-- 댓글 삭제 여부
	CONSTRAINT PK_COMMENT_CODE PRIMARY KEY(COMMENT_CODE),
	CONSTRAINT FK_BOARD_CODE_C FOREIGN KEY(BOARD_CODE) REFERENCES BOARDS(BOARD_CODE) ON DELETE CASCADE, -- 게시글 삭제 시 댓글도 삭제되도록
	CONSTRAINT FK_USER_CODE_C FOREIGN KEY(USER_CODE) REFERENCES USERS(USER_CODE)
);

SELECT * FROM COMMENTS;

-- INSERT 기본 형식
INSERT INTO COMMENTS(COMMENT_CODE, BOARD_CODE, USER_CODE, CONTEXT, CREATE_DATE, DEL_YN)
VALUES(SEQ_COMMENTS_COMMENT_CODE.NEXTVAL, 1, 1, 'context', SYSDATE, 'N');